name: Build & Publish (dev)

on:
  push:
    branches: [ "dev" ]

concurrency:
  group: build-publish-dev
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}/finpath

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Falls dein Backend-Dockerfile die WAR erwartet, bauen wir sie vorab.
      # Wenn dein Dockerfile selbst "mvn package" macht, diesen Schritt entfernen.
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Build backend WAR (Maven)
        run: mvn -B -q -DskipTests clean package --file apps/finpath-backend/pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---------- BACKEND ----------
      - name: Meta (backend)
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}-backend
          tags: |
            type=raw,value=dev
            type=sha
          labels: |
            org.opencontainers.image.title=finpath-backend
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (backend)
        id: build_backend
        uses: docker/build-push-action@v6
        with:
          context: ./apps/finpath-backend
          file: ./apps/finpath-backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}
          cache-from: type=gha,scope=backend-dev
          cache-to: type=gha,mode=max,scope=backend-dev
          provenance: mode=min

      # ---------- FRONTEND WEB ----------
      - name: Meta (frontend web)
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}-frontend-web
          tags: |
            type=raw,value=dev
            type=sha
          labels: |
            org.opencontainers.image.title=finpath-frontend-web
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (frontend web)
        id: build_web
        uses: docker/build-push-action@v6
        with:
          context: ./apps/finpath-frontend-web
          file: ./apps/finpath-frontend-web/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}
          cache-from: type=gha,scope=frontend-web-dev
          cache-to: type=gha,mode=max,scope=frontend-web-dev
          provenance: mode=min

      # ---------- FRONTEND MOBILE (Web-Shell f√ºr Capacitor) ----------
      - name: Meta (frontend mobile)
        id: meta_mobile
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}-frontend-mobile
          tags: |
            type=raw,value=dev
            type=sha
          labels: |
            org.opencontainers.image.title=finpath-frontend-mobile
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (frontend mobile)
        id: build_mobile
        uses: docker/build-push-action@v6
        with:
          context: ./apps/finpath-frontend-mobile
          file: ./apps/finpath-frontend-mobile/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta_mobile.outputs.tags }}
          labels: ${{ steps.meta_mobile.outputs.labels }}
          cache-from: type=gha,scope=frontend-mobile-dev
          cache-to: type=gha,mode=max,scope=frontend-mobile-dev
          provenance: mode=min

      # ---------- ATTESTATIONS ----------
      - name: Attest backend image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.IMAGE_PREFIX }}-backend
          subject-digest: ${{ steps.build_backend.outputs.digest }}
          push-to-registry: true

      - name: Attest web image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.IMAGE_PREFIX }}-frontend-web
          subject-digest: ${{ steps.build_web.outputs.digest }}
          push-to-registry: true

      - name: Attest mobile image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.IMAGE_PREFIX }}-frontend-mobile
          subject-digest: ${{ steps.build_mobile.outputs.digest }}
          push-to-registry: true

  # -------- OPTIONAL: Auto-Deploy auf Staging / Hetzner --------